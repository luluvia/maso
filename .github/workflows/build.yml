name: Check and Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  cog_check:
    runs-on: ubuntu-latest
    name: check conventional commit compliance
    steps:
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - if: github.event_name == 'push'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Conventional commit check
        uses: cocogitto/cocogitto-action@v3
  formatting:
    runs-on: ubuntu-latest
    name: check rust formatting
    steps:
      - uses: actions/checkout@v3
      - name: Run cargo fmt
        run: cargo fmt --all --check
  linting:
    runs-on: ubuntu-latest
    name: check rust linting
    steps:
      - uses: actions/checkout@v3
      - name: Run cargo clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
  build:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'docs:') }}
    needs: [ cog_check, formatting, linting ]
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
